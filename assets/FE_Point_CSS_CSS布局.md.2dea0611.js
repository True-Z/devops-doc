import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.32dba02b.js";const d=JSON.parse('{"title":"CSS 布局","description":"","frontmatter":{},"headers":[],"relativePath":"FE_Point/CSS/CSS布局.md","filePath":"FE_Point/CSS/CSS布局.md","lastUpdated":1708148918000}'),p={name:"FE_Point/CSS/CSS布局.md"},o=l(`<h1 id="css-布局" tabindex="-1">CSS 布局 <a class="header-anchor" href="#css-布局" aria-label="Permalink to &quot;CSS 布局&quot;">​</a></h1><h2 id="普通流" tabindex="-1">普通流 <a class="header-anchor" href="#普通流" aria-label="Permalink to &quot;普通流&quot;">​</a></h2><blockquote><p>默认布局，从左到右排列，当一行位置不够时，另起一行向下排列；除了受 <code>padding</code> 和 <code>margin</code> 的影响外，还受到 <code>display</code> 的影响。</p></blockquote><h2 id="浮动" tabindex="-1">浮动 <a class="header-anchor" href="#浮动" aria-label="Permalink to &quot;浮动&quot;">​</a></h2><blockquote><p><code>浮动元素脱离标准流</code>；该元素的下一个兄弟元素中如果有内联元素（通常是文字），则会围绕该元素显示，形成类似&quot;文字围绕图片&quot;的效果；即虽然浮动会让元素脱离文档流，但是文本内容会受到浮动元素的影响。</p></blockquote><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">float {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">float</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">left</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 左浮动</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">float</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">right</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 右浮动</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">float</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">none</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 无浮动</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">float {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">left</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 左浮动</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">right</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 右浮动</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">none</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 无浮动</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="定位" tabindex="-1">定位 <a class="header-anchor" href="#定位" aria-label="Permalink to &quot;定位&quot;">​</a></h2><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">position {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">static</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 静态定位（无定位）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">relative</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 相对定位</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">absolute</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 绝对定位（脱标）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">fixed</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 固定定位（脱标）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">sticky</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 粘性定位</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 粘性定位为相对定位和固定定位的混合。元素在跨越特定阈值前为相对定位，之后为固定定位，</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 须指定 top，right，bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">position {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">position</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">static</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 静态定位（无定位）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">position</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">relative</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 相对定位</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">position</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">absolute</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 绝对定位（脱标）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">position</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">fixed</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 固定定位（脱标）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">position</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">sticky</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 粘性定位</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 粘性定位为相对定位和固定定位的混合。元素在跨越特定阈值前为相对定位，之后为固定定位，</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 须指定 top，right，bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="flex" tabindex="-1">flex <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;flex&quot;">​</a></h2><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">flex {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 定义 flex 容器</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">inline-flex</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">//定义行内 flex 容器</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// flex 容器</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-flow</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">flex-direction</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">flex-wrap</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-direction</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">row</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 主轴方向</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// row - 水平start</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// row-reverse - 水平end；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// column - 垂直start</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// column-reverse - 垂直end</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-wrap</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">nowrap</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 是否换行显示（wrap - 换行，nowrap - 不换行）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">place-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">align-content</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">justify-content</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 纵轴空间分配（该属性对单行弹性盒子模型无效）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">justify-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 主轴空间分配</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// flex-start - 从左至右排列项目</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// flex-end - 从右至左排列项目</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// center - 居中排列项目</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// space-between - 均匀排列每个元素、首个元素放置于起点，末尾元素放置于终点</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// space-around - 每个元素周围分配相同的空间、两侧间距较少（显示）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// space-evenly - 均匀排列每个元素、每个元素之间的间隔相等</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// stretch - 均匀分布项目、拉伸‘auto’大小的项目以充满容器</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">gap</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">row-gap</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">column-gap</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">row-gap</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 元素行之间的间隙大小</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">column-gap</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 元素列之间的间隙大小</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">place-items</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">align-items</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">justify-items</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-items</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 控制十字轴上项目的对齐方式</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// flex-start - 从左至右排列项目</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// flex-end - 从右至左排列项目</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// center - 居中排列项目</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// stretch - 均匀分布项目、拉伸‘auto’大小的项目以充满容器</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">justify-items</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 为所有盒中的项目定义了默认的 justify-self（弹性布局中，该属性被忽略）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// item 项目</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">flex-grow</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">flex-shrink</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">flex-basis</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-grow</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// flex 增长系数</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-shrink</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// flex 收缩系数</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-basis</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// flex 元素初始大小</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">justify-self</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 单个盒子在其布局容器适当轴中的对齐方式（弹性布局中，该属性被忽略）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-self</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 对齐当前 grid 或 flex 行中的元素，并覆盖已有的 align-items 的值</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 属性不适用于块类型的盒模型和表格单元；如果任何 flexbox 元素的侧轴方向 margin 值设置为 auto，则会忽略 \`align-self\`）</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">flex {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">flex</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 定义 flex 容器</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">inline-flex</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">//定义行内 flex 容器</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// flex 容器</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-flow</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">flex-direction</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">flex-wrap</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-direction</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">row</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 主轴方向</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// row - 水平start</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// row-reverse - 水平end；</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// column - 垂直start</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// column-reverse - 垂直end</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-wrap</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">nowrap</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 是否换行显示（wrap - 换行，nowrap - 不换行）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">place-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">align-content</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">justify-content</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 纵轴空间分配（该属性对单行弹性盒子模型无效）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">justify-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 主轴空间分配</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// flex-start - 从左至右排列项目</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// flex-end - 从右至左排列项目</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// center - 居中排列项目</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// space-between - 均匀排列每个元素、首个元素放置于起点，末尾元素放置于终点</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// space-around - 每个元素周围分配相同的空间、两侧间距较少（显示）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// space-evenly - 均匀排列每个元素、每个元素之间的间隔相等</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// stretch - 均匀分布项目、拉伸‘auto’大小的项目以充满容器</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">gap</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">row-gap</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">column-gap</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">row-gap</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 元素行之间的间隙大小</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">column-gap</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 元素列之间的间隙大小</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">place-items</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">align-items</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">justify-items</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-items</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 控制十字轴上项目的对齐方式</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// flex-start - 从左至右排列项目</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// flex-end - 从右至左排列项目</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// center - 居中排列项目</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// stretch - 均匀分布项目、拉伸‘auto’大小的项目以充满容器</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">justify-items</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 为所有盒中的项目定义了默认的 justify-self（弹性布局中，该属性被忽略）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// item 项目</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">flex-grow</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">flex-shrink</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">flex-basis</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-grow</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// flex 增长系数</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-shrink</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// flex 收缩系数</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-basis</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// flex 元素初始大小</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">justify-self</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 单个盒子在其布局容器适当轴中的对齐方式（弹性布局中，该属性被忽略）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-self</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 对齐当前 grid 或 flex 行中的元素，并覆盖已有的 align-items 的值</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 属性不适用于块类型的盒模型和表格单元；如果任何 flexbox 元素的侧轴方向 margin 值设置为 auto，则会忽略 \`align-self\`）</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="grid" tabindex="-1">grid <a class="header-anchor" href="#grid" aria-label="Permalink to &quot;grid&quot;">​</a></h2><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">grid {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">grid</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 定义 grid 网格</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">inline-grid</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 定义行内 grid 网格</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// gird 容器</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-template-columns</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// fr 容器剩余空间单位 minmax（最小，最大） r</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-template-rows</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">gap</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">column-gap</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">row-gap</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">column-gap</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 列轨道宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">row-gap</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 行轨道宽度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 定义一个区域并为区域内项目进行命名（不需要命名使用 . ）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-template-areas</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;a b c&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;d e f&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;g h i&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-auto-flow</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">row</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 项目排序方式（先行后列）默认，也可以设置 column 先列后行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">place-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">align-content</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">justify-content</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 总体项目排列（需容器还有空间）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">justify-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 总体项目排列（需容器还有空间）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-auto-columns</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 隐式网格列设置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-auto-rows</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 隐式网格行设置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// item 项目</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-items</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 项目在轨道内垂直对齐方式（与flex相似）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">justify-items</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 项目在轨道内水平对齐方式（与flex相似）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-column-start</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 2 列轨道开始</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-column-end</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 4 列轨道结束</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-row-start</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 2 行轨道开始</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-row-end</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 4 行轨道结束</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">grid-area</span><span style="color:#E1E4E8;">: b; </span><span style="color:#6A737D;">// 制定项目放到哪个区域（需与 grid-template-areas 配合使用）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">justify-self</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 单个盒子在其布局容器适当轴中的对齐方式（弹性布局中，该属性被忽略）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-self</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 对齐当前 grid 或 flex 行中的元素，并覆盖已有的 align-items 的值（属性不适用于块类型的盒模型和表格单元）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 如果任何 flexbox 元素的侧轴方向 margin值设置为 auto，则会忽略 \`align-self\`</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">grid {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">grid</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 定义 grid 网格</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">inline-grid</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 定义行内 grid 网格</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// gird 容器</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-template-columns</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// fr 容器剩余空间单位 minmax（最小，最大） r</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-template-rows</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">gap</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">column-gap</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">row-gap</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">column-gap</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 列轨道宽度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">row-gap</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 行轨道宽度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 定义一个区域并为区域内项目进行命名（不需要命名使用 . ）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-template-areas</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;a b c&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;d e f&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;g h i&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-auto-flow</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">row</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 项目排序方式（先行后列）默认，也可以设置 column 先列后行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">place-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">align-content</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">justify-content</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 简写属性</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 总体项目排列（需容器还有空间）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">justify-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 总体项目排列（需容器还有空间）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-auto-columns</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 隐式网格列设置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-auto-rows</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 隐式网格行设置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// item 项目</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-items</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 项目在轨道内垂直对齐方式（与flex相似）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">justify-items</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 项目在轨道内水平对齐方式（与flex相似）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-column-start</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 2 列轨道开始</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-column-end</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 4 列轨道结束</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-row-start</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 2 行轨道开始</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-row-end</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 4 行轨道结束</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">grid-area</span><span style="color:#24292E;">: b; </span><span style="color:#6A737D;">// 制定项目放到哪个区域（需与 grid-template-areas 配合使用）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">justify-self</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 单个盒子在其布局容器适当轴中的对齐方式（弹性布局中，该属性被忽略）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-self</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 对齐当前 grid 或 flex 行中的元素，并覆盖已有的 align-items 的值（属性不适用于块类型的盒模型和表格单元）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 如果任何 flexbox 元素的侧轴方向 margin值设置为 auto，则会忽略 \`align-self\`</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h1>`,13),e=[o];function c(t,r,y,E,i,C){return n(),a("div",null,e)}const A=s(p,[["render",c]]);export{d as __pageData,A as default};
