import{_ as t,o as e,c as d,Q as l}from"./chunks/framework.32dba02b.js";const p=JSON.parse('{"title":"CSS 选择器","description":"","frontmatter":{},"headers":[],"relativePath":"FE_Point/CSS/CSS选择器.md","filePath":"FE_Point/CSS/CSS选择器.md","lastUpdated":1708148918000}'),n={name:"FE_Point/CSS/CSS选择器.md"},a=l('<h1 id="css-选择器" tabindex="-1">CSS 选择器 <a class="header-anchor" href="#css-选择器" aria-label="Permalink to &quot;CSS 选择器&quot;">​</a></h1><h2 id="基础选择器" tabindex="-1">基础选择器 <a class="header-anchor" href="#基础选择器" aria-label="Permalink to &quot;基础选择器&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">序号</th><th style="text-align:left;">类型</th><th>选择器</th><th>例子</th><th>例子描述</th><th style="text-align:center;">CSS 权重</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:left;">通配符选择器</td><td>*</td><td>*</td><td>选择所有元素。</td><td style="text-align:center;">0,0,0,0</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:left;">标签选择器</td><td>element</td><td>p</td><td>选择所有<code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,0,1</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:left;">类选择器</td><td>.class</td><td>.intro</td><td>选择 class=&quot;intro&quot; 的所有元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:left;">id 选择器</td><td>#id</td><td>#firstname</td><td>选择 id=&quot;firstname&quot; 的所有元素。</td><td style="text-align:center;">0,1,0,0</td></tr></tbody></table><h2 id="复合选择器" tabindex="-1">复合选择器 <a class="header-anchor" href="#复合选择器" aria-label="Permalink to &quot;复合选择器&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">序号</th><th style="text-align:left;">类型</th><th>选择器</th><th>例子</th><th>例子描述</th><th>CSS 权重</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:left;">后代选择器</td><td>element element</td><td>div p</td><td>选择<code>&lt;div&gt;</code> 元素内部的所有 <code>&lt;p&gt;</code> 元素。</td><td>0,0,0,1</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:left;">子代选择器</td><td>element&gt;element</td><td>div&gt;p</td><td>选择父元素为<code>&lt;div&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素。</td><td>0,0,0,1</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:left;">相邻兄弟选择器</td><td>element+element</td><td>div+p</td><td>选择紧接在<code>&lt;div&gt;</code> 元素之后的所有 <code>&lt;p&gt;</code> 元素。</td><td>0,0,0,1</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:left;">通用选择器</td><td>element1~element2</td><td>p~ul</td><td>选择前面有<code>&lt;p&gt;</code> 元素的每个 <code>&lt;ul&gt;</code> 元素。</td><td>0,0,1,0</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:left;">并集选择器</td><td>element,element</td><td>div,p</td><td>选择所有<code>&lt;div&gt;</code> 元素和所有 <code>&lt;p&gt;</code> 元素。</td><td>0,0,0,1</td></tr></tbody></table><h2 id="伪元素选择器" tabindex="-1">伪元素选择器 <a class="header-anchor" href="#伪元素选择器" aria-label="Permalink to &quot;伪元素选择器&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">序号</th><th style="text-align:left;">类型</th><th>选择器</th><th>例子</th><th>例子描述</th><th>CSS 权重</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:left;">伪元素选择器</td><td>:first-letter</td><td>p:first-letter</td><td>选择每个<code>&lt;p&gt;</code> 元素的首字母。</td><td>0,0,0,1</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:left;">伪元素选择器</td><td>:first-line</td><td>p:first-line</td><td>选择每个<code>&lt;p&gt;</code> 元素的首行。</td><td>0,0,0,1</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:left;">伪元素选择器</td><td>:before</td><td>p:before</td><td>在每个<code>&lt;p&gt;</code> 元素的内容之前插入内容。</td><td>0,0,0,1</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:left;">伪元素选择器</td><td>:after</td><td>p:after</td><td>在每个<code>&lt;p&gt;</code> 元素的内容之后插入内容。</td><td>0,0,0,1</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:left;">伪元素选择器</td><td>::selection</td><td>::selection</td><td>选择被用户选取的元素部分。</td><td>0,0,0,1</td></tr></tbody></table><h2 id="动态伪类选择器" tabindex="-1">动态伪类选择器 <a class="header-anchor" href="#动态伪类选择器" aria-label="Permalink to &quot;动态伪类选择器&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">序号</th><th>类型</th><th>选择器</th><th>例子</th><th>例子描述</th><th style="text-align:center;">CSS 权重</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td>链接伪类选择器</td><td>:link</td><td>a:link</td><td>选择所有未被访问的链接。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">2</td><td>链接伪类选择器</td><td>:visited</td><td>a:visited</td><td>选择所有已被访问的链接。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">3</td><td>用户行为选择器</td><td>:active</td><td>a:active</td><td>选择活动链接。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">4</td><td>用户行为选择器</td><td>:hover</td><td>a:hover</td><td>选择鼠标指针位于其上的链接。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">5</td><td>用户行为选择器</td><td>:focus</td><td>input:focus</td><td>选择获得焦点的 input 元素。</td><td style="text-align:center;">0,0,1,0</td></tr></tbody></table><h2 id="结构伪类选择器" tabindex="-1">结构伪类选择器 <a class="header-anchor" href="#结构伪类选择器" aria-label="Permalink to &quot;结构伪类选择器&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">序号</th><th>类型</th><th>选择器</th><th>例子</th><th>例子描述</th><th style="text-align:center;">CSS 权重</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td>结构伪类选择器</td><td>:first-child</td><td>p:first-child</td><td>选择属于父元素的第一个子元素的每个<code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">2</td><td>结构伪类选择器</td><td>:lang（language）</td><td>p:lang（it）</td><td>选择带有以 &quot;it&quot; 开头的 lang 属性值的每个<code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">3</td><td>结构伪类选择器</td><td>:first-of-type</td><td>p:first-of-type</td><td>选择属于其父元素的首个<code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">4</td><td>结构伪类选择器</td><td>:last-of-type</td><td>p:last-of-type</td><td>选择属于其父元素的最后<code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">5</td><td>结构伪类选择器</td><td>:only-of-type</td><td>p:only-of-type</td><td>选择属于其父元素唯一的<code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">6</td><td>结构伪类选择器</td><td>:only-child</td><td>p:only-child</td><td>选择属于其父元素的唯一子元素的每个<code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">7</td><td>结构伪类选择器</td><td>:nth-child（n）</td><td>p:nth-child（2）</td><td>选择属于其父元素的第二个子元素的每个<code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">8</td><td>结构伪类选择器</td><td>:nth-last-child（n）</td><td>p:nth-last-child（2）</td><td>同上，从最后一个子元素开始计数。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">9</td><td>结构伪类选择器</td><td>:nth-of-type（n）</td><td>p:nth-of-type（2）</td><td>选择属于其父元素第二个<code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">10</td><td>结构伪类选择器</td><td>:nth-last-of-type（n）</td><td>p:nth-last-of-type（2）</td><td>同上，但是从最后一个子元素开始计数。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">11</td><td>结构伪类选择器</td><td>:last-child</td><td>p:last-child</td><td>选择属于其父元素最后一个子元素每个<code>&lt;p&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">12</td><td>结构伪类选择器</td><td>:root</td><td>:root</td><td>选择文档的根元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">13</td><td>结构伪类选择器</td><td>:empty</td><td>p:empty</td><td>选择没有子元素的每个<code>&lt;p&gt;</code> 元素（包括文本节点）。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">14</td><td>结构伪类选择器</td><td>:target</td><td>#news:target</td><td>选择当前活动的 #news 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">15</td><td>结构伪类选择器</td><td>:enabled</td><td>input:enabled</td><td>选择每个启用的<code>&lt;input&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">16</td><td>结构伪类选择器</td><td>:disabled</td><td>input:disabled</td><td>选择每个禁用的<code>&lt;input&gt;</code> 元素</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">17</td><td>结构伪类选择器</td><td>:checked</td><td>input:checked</td><td>选择每个被选中的<code>&lt;input&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr></tbody></table><h2 id="属性选择器" tabindex="-1">属性选择器 <a class="header-anchor" href="#属性选择器" aria-label="Permalink to &quot;属性选择器&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">序号</th><th style="text-align:center;">类型</th><th>选择器</th><th>例子</th><th>例子描述</th><th style="text-align:center;">CSS 权重</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">属性选择器</td><td>[attribute]</td><td>[target]</td><td>选择带有 target 属性所有元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">属性选择器</td><td>[attribute=value]</td><td>[target=_blank]</td><td>选择 target=&quot;_blank&quot; 的所有元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">属性选择器</td><td>[attribute~=value]</td><td>[title~=flower]</td><td>选择 title 属性包含单词 &quot;flower&quot; 的所有元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">属性选择器</td><td>[attribute|=value]</td><td>[lang|=en]</td><td>选择 lang 属性值以 &quot;en&quot; 开头的所有元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">属性选择器</td><td>[attribute^=value]</td><td>a[src^=&quot;https&quot;]</td><td>选择其 src 属性值以 &quot;https&quot; 开头的每个<code>&lt;a&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">属性选择器</td><td>[attribute$=value]</td><td>a[src$=&quot;.pdf&quot;]</td><td>选择其 src 属性以 &quot;.pdf&quot; 结尾的所有<code>&lt;a&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr><tr><td style="text-align:center;">7</td><td style="text-align:center;">属性选择器</td><td>[attribute*=value]</td><td>a[src*=&quot;abc&quot;]</td><td>选择其 src 属性中包含 &quot;abc&quot; 子串的每个<code>&lt;a&gt;</code> 元素。</td><td style="text-align:center;">0,0,1,0</td></tr></tbody></table><h2 id="否定伪类选择器" tabindex="-1">否定伪类选择器 <a class="header-anchor" href="#否定伪类选择器" aria-label="Permalink to &quot;否定伪类选择器&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">序号</th><th>类型</th><th>选择器</th><th>例子</th><th>例子描述</th><th style="text-align:center;">CSS 权重</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td>否定伪类选择器</td><td>:not（selector）</td><td>:not（p）</td><td>选择非<code>&lt;p&gt;</code> 元素的每个元素。</td><td style="text-align:center;">不计算权重</td></tr></tbody></table>',15),r=[a];function c(i,o,s,h,g,y){return e(),d("div",null,r)}const u=t(n,[["render",c]]);export{p as __pageData,u as default};
